<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classprism_1_1geometry_1_1_vector2" kind="class" language="C++" prot="public">
    <compoundname>prism::geometry::Vector2</compoundname>
    <includes refid="_vector2_8h" local="no">Vector2.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classprism_1_1geometry_1_1_vector2_1a706435b71afb494413feb0f74f6abbab" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float prism::geometry::Vector2::m_x</definition>
        <argsstring></argsstring>
        <name>m_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="13" column="1" bodyfile="inc/geometry/Vector2.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classprism_1_1geometry_1_1_vector2_1a9791d62d04b78cc1a42ac79c7d30eeae" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float prism::geometry::Vector2::m_y</definition>
        <argsstring></argsstring>
        <name>m_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="13" column="1" bodyfile="inc/geometry/Vector2.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1aa5d980ef1917d61bd2b94ebde33eb4bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::geometry::Vector2::Vector2</definition>
        <argsstring>(void)</argsstring>
        <name>Vector2</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a default <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> setting it to a zero vector i.e. x=y=0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="16" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a3caaceaf7dbec8dad438240ac1aa264b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::geometry::Vector2::Vector2</definition>
        <argsstring>(const float x, const float y)</argsstring>
        <name>Vector2</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> from the x and y floats passed in. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="17" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1ad79074fd4a43bc8a15edd867dbf2dfc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::geometry::Vector2::Vector2</definition>
        <argsstring>(const Vector2 &amp;v)</argsstring>
        <name>Vector2</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="18" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a4f7c72b3cc4ec808cbad8017721516d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::geometry::Vector2::Vector2</definition>
        <argsstring>(const Vector3 &amp;v)</argsstring>
        <name>Vector2</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> from the x and y components of <ref refid="classprism_1_1geometry_1_1_vector3" kindref="compound">Vector3</ref> whilst it drops the z component. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="19" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a3a3b47d1addcc4b92ad4c4f6b4c3fca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::geometry::Vector2::Vector2</definition>
        <argsstring>(const Vector4 &amp;v)</argsstring>
        <name>Vector2</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector4" kindref="compound">Vector4</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> from the x and y components of <ref refid="classprism_1_1geometry_1_1_vector4" kindref="compound">Vector4</ref> whilst it drops the z and w components. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="20" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a94131fbec0f0a42478c3489a8be57093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::geometry::Vector2::Vector2</definition>
        <argsstring>(const Point &amp;p)</argsstring>
        <name>Vector2</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> from a 2d <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="21" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1ab8bd01e24bdbb8aec757ea92ae6b8577" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>prism::geometry::Vector2::~Vector2</definition>
        <argsstring>(void)</argsstring>
        <name>~Vector2</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="22" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a1d36a5e192af9cbbe4e2395e6d4e16f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float prism::geometry::Vector2::dotProduct</definition>
        <argsstring>(const Vector2 &amp;otherVector) const </argsstring>
        <name>dotProduct</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>otherVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the dot product (a scalar value) of this vector and otherVector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="24" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1ad37a0cef216b389d6d21e6d1e61b2d0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float prism::geometry::Vector2::distance</definition>
        <argsstring>(const Vector2 &amp;otherVector) const </argsstring>
        <name>distance</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>otherVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the distance between two points represented by this vector and otherVector. The distance is defined as the length of the line segment between two points represented here with the vectors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="25" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1af37208c5f279b6ab1bd8a9e73665f156" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool prism::geometry::Vector2::isZero</definition>
        <argsstring>() const </argsstring>
        <name>isZero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests whether this <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> is x=y=0. If so, true is returned and false if not. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="26" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a2317335bfed086a9998ed5a5915741f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float prism::geometry::Vector2::length</definition>
        <argsstring>() const </argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the calculation of this vector&apos;s length (also known as the magnitude). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="27" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a723d69e0db962bdb54363e626140ba8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Vector2::normalise</definition>
        <argsstring>()</argsstring>
        <name>normalise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method normalises this vector. If this vector is a zero vector (i.e. where each component is 0) then it cannot be normalised and so nothing happens. A normlised vector (also called a unit vector) is one which still points in the same direction but has been scaled to have a length or magnitude of 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="28" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a74b0110354a1d6ec3d3025ac3d36196c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 prism::geometry::Vector2::normalised</definition>
        <argsstring>() const </argsstring>
        <name>normalised</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> that is a normalised version of this vector. This vector remains unchanged. If this vector is a zero vector (i.e. where each component is 0) then it cannot be normalised and a zero vector is returned instead. A normlised vector (also called a unit vector) is one which still points in the same direction but has been scaled to have a length or magnitude of 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="29" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a09d50a0f22f5465386ae325e788b1c87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Vector2::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets this <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> back to x=y=0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="30" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1aa83ee9b42bdb58835caf4d5c48fca60f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Vector2::setX</definition>
        <argsstring>(const float x)</argsstring>
        <name>setX</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the x component of this vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="31" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1afb72f100bf571d70fbe27625980ce72a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Vector2::setY</definition>
        <argsstring>(const float y)</argsstring>
        <name>setY</name>
        <param>
          <type>const float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the y component of this vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="32" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a70e4ecc1edbd65a2a436da4ebb363bec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float prism::geometry::Vector2::x</definition>
        <argsstring>() const </argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the x component of this vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="33" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a30579e6692e8074cf951ce37fef7f01a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float prism::geometry::Vector2::y</definition>
        <argsstring>() const </argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the y component of this vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="34" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1aab213e1cffe97069574d6ffd9828dabb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref></type>
        <definition>Point prism::geometry::Vector2::toPoint</definition>
        <argsstring>() const </argsstring>
        <name>toPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> object containing the x and y components of this vector. Note: <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> uses integer precision so non-integer x and y coordinates will be rounded. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="35" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a960ff4b193953712f425e61440d37a6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 prism::geometry::Vector2::toVector3</definition>
        <argsstring>() const </argsstring>
        <name>toVector3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classprism_1_1geometry_1_1_vector3" kindref="compound">Vector3</ref> with the x and y of this vector additionally setting the z component to 0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="36" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a4de3bc58d6778fa61a984e80d2ee7255" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_vector4" kindref="compound">Vector4</ref></type>
        <definition>Vector4 prism::geometry::Vector2::toVector4</definition>
        <argsstring>() const </argsstring>
        <name>toVector4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classprism_1_1geometry_1_1_vector4" kindref="compound">Vector4</ref> with the x and y of this vector additionally setting the z and w components to 0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="37" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a3b534df91eeb123befc850c4c2827c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2 &amp; prism::geometry::Vector2::operator+=</definition>
        <argsstring>(const Vector2 &amp;v)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the corresponding components of this vector and vector v together. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="39" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1acb133482e7bbdcdfa780033640697c41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2 &amp; prism::geometry::Vector2::operator-=</definition>
        <argsstring>(const Vector2 &amp;v)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtracts the components of vector v from the corresponding components of this vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="40" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="189" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a2e13a4f0af3ec0ede4aaa7ae113d30dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2 &amp; prism::geometry::Vector2::operator*=</definition>
        <argsstring>(const float factor)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const float</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplies each component of this vector by factor and returns a reference to this vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="41" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="198" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1aca53532527a3e864041f70a303dcce8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2 &amp; prism::geometry::Vector2::operator*=</definition>
        <argsstring>(const Vector2 &amp;v)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplies the components of this vector by the corresponding components of vector v. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="42" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1ad0cbd6b3d936f20fa7915a8a3e3acafb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2 &amp; prism::geometry::Vector2::operator/=</definition>
        <argsstring>(const float divisor)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const float</type>
          <declname>divisor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If divisor is not 0 then each component of this vector is divided by divisor, otherwise nothing happens. Either way a reference to this vector is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="43" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="217" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a2c67a5c7d9f01609477f33de9dad039f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2 &amp; prism::geometry::Vector2::operator=</definition>
        <argsstring>(const Vector2 &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator assigns the component values of v to this vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="44" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="228" bodyend="233"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a9938aca4d3f344149c7c83c21e18e0a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float prism::geometry::Vector2::dotProduct</definition>
        <argsstring>(const Vector2 &amp;a, const Vector2 &amp;b)</argsstring>
        <name>dotProduct</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the dot product of vectors a and b (the length of the projection of b onto a, multiplied by the length of a). The dot product of the two vectors is the sum of the products of corresponding components which results in a scalar. The dot product of two vectors a and b is also equal to the cosine of angle theta between the two vectors placed tail to tail multiplied by the lengths of the vectors i.e. a.b = ||a||||b||cos(theta) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="47" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1a1f5f94de630102484188a59c17ffceb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float prism::geometry::Vector2::distance</definition>
        <argsstring>(const Vector2 &amp;a, const Vector2 &amp;b)</argsstring>
        <name>distance</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the distance between two points. The distance is defined as the length of the line segment between two points represented here with the vectors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="48" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="254" bodyend="259"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_vector2_1a43adb85199fdc6ae1f9ba0397660ad9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 operator+</definition>
        <argsstring>(const Vector2 &amp;a, const Vector2 &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> that is the result of adding the components of vector a and vector b. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="51" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="267" bodyend="269"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_vector2_1a6132994fe4bbe4bd94b3bd1dbb83d5cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 operator-</definition>
        <argsstring>(const Vector2 &amp;a, const Vector2 &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> that is the result of subtracting the components of vector b from vector a. Note: vector subtraction is not commutitive so a-b does not always equal b-a </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="52" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_vector2_1a3f08196e8b25ab8789db503aa50ae564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 operator-</definition>
        <argsstring>(const Vector2 &amp;v)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> object where each vector component of v has been negated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="53" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_vector2_1afe2f3c89eb55595919121a94cfaa4c81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 operator*</definition>
        <argsstring>(const float factor, const Vector2 &amp;v)</argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>factor</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> that has had each vector component of v multiplied by factor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="54" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="289" bodyend="291"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_vector2_1ad0b580b5cac3d5fdf13ac4db0c85be2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 operator*</definition>
        <argsstring>(const Vector2 &amp;v, const float factor)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> that has had each vector component of v multiplied by factor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="55" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="296" bodyend="298"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_vector2_1a41289aa7adf3d51186f6c2805e5d0fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 operator/</definition>
        <argsstring>(const Vector2 &amp;v, const float divisor)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>divisor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> where each component of vector v has been divided by divisor. If divisor is 0 then a zero vector is returned instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="56" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="304" bodyend="308"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_vector2_1a1393036fc72fa2140bdada67b3715d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend const bool</type>
        <definition>const bool operator==</definition>
        <argsstring>(const Vector2 &amp;a, const Vector2 &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares the two vectors and if each of the corresponding components are equal in value then true is returned, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="57" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="314" bodyend="320"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_vector2_1a6994cbd6248d3523a38ee0f20cce9c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend const bool</type>
        <definition>const bool operator!=</definition>
        <argsstring>(const Vector2 &amp;a, const Vector2 &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares the vectors and returns true if a and b are not equal, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="58" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="325" bodyend="327"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_vector2_1a077027eaf020d591b263437d2949c850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Vector2 &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows an instance of <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> to be written to the ostream and returns a reference to the ostream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="59" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="332" bodyend="335"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classprism_1_1geometry_1_1_vector2_1ac736d833911745a4f434c18d2607e23f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Vector2::copyDataFromSourceToDestination</definition>
        <argsstring>(const Vector2 &amp;source, Vector2 &amp;destination)</argsstring>
        <name>copyDataFromSourceToDestination</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classprism_1_1geometry_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simply copiesthe components values from the source vector to the detination vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Vector2.h" line="62" column="1" bodyfile="src/geometry/Vector2.cpp" bodystart="343" bodyend="346"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="inc/geometry/Vector2.h" line="11" column="1" bodyfile="inc/geometry/Vector2.h" bodystart="10" bodyend="64"/>
    <listofallmembers>
      <member refid="classprism_1_1geometry_1_1_vector2_1ac736d833911745a4f434c18d2607e23f" prot="private" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>copyDataFromSourceToDestination</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1ad37a0cef216b389d6d21e6d1e61b2d0a" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>distance</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a1f5f94de630102484188a59c17ffceb8" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>distance</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a1d36a5e192af9cbbe4e2395e6d4e16f8" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>dotProduct</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a9938aca4d3f344149c7c83c21e18e0a8" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>dotProduct</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1af37208c5f279b6ab1bd8a9e73665f156" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>isZero</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a2317335bfed086a9998ed5a5915741f5" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>length</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a706435b71afb494413feb0f74f6abbab" prot="private" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>m_x</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a9791d62d04b78cc1a42ac79c7d30eeae" prot="private" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>m_y</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a723d69e0db962bdb54363e626140ba8a" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>normalise</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a74b0110354a1d6ec3d3025ac3d36196c" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>normalised</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a6994cbd6248d3523a38ee0f20cce9c85" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator!=</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1afe2f3c89eb55595919121a94cfaa4c81" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator*</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1ad0b580b5cac3d5fdf13ac4db0c85be2b" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator*</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a2e13a4f0af3ec0ede4aaa7ae113d30dd" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator*=</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1aca53532527a3e864041f70a303dcce8d" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator*=</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a43adb85199fdc6ae1f9ba0397660ad9a" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator+</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a3b534df91eeb123befc850c4c2827c13" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator+=</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a6132994fe4bbe4bd94b3bd1dbb83d5cf" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator-</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a3f08196e8b25ab8789db503aa50ae564" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator-</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1acb133482e7bbdcdfa780033640697c41" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator-=</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a41289aa7adf3d51186f6c2805e5d0fa6" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator/</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1ad0cbd6b3d936f20fa7915a8a3e3acafb" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator/=</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a077027eaf020d591b263437d2949c850" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a2c67a5c7d9f01609477f33de9dad039f" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator=</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a1393036fc72fa2140bdada67b3715d93" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>operator==</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a09d50a0f22f5465386ae325e788b1c87" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>reset</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1aa83ee9b42bdb58835caf4d5c48fca60f" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>setX</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1afb72f100bf571d70fbe27625980ce72a" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>setY</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1aab213e1cffe97069574d6ffd9828dabb" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>toPoint</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a960ff4b193953712f425e61440d37a6c" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>toVector3</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a4de3bc58d6778fa61a984e80d2ee7255" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>toVector4</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1aa5d980ef1917d61bd2b94ebde33eb4bc" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>Vector2</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a3caaceaf7dbec8dad438240ac1aa264b" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>Vector2</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1ad79074fd4a43bc8a15edd867dbf2dfc1" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>Vector2</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a4f7c72b3cc4ec808cbad8017721516d3" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>Vector2</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a3a3b47d1addcc4b92ad4c4f6b4c3fca1" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>Vector2</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a94131fbec0f0a42478c3489a8be57093" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>Vector2</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a70e4ecc1edbd65a2a436da4ebb363bec" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>x</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1a30579e6692e8074cf951ce37fef7f01a" prot="public" virt="non-virtual"><scope>prism::geometry::Vector2</scope><name>y</name></member>
      <member refid="classprism_1_1geometry_1_1_vector2_1ab8bd01e24bdbb8aec757ea92ae6b8577" prot="public" virt="virtual"><scope>prism::geometry::Vector2</scope><name>~Vector2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
