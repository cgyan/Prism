<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classprism_1_1containers_1_1_forward_iterator" kind="class" language="C++" prot="public">
    <compoundname>prism::containers::ForwardIterator</compoundname>
    <derivedcompoundref refid="classprism_1_1containers_1_1_bidirectional_iterator" prot="public" virt="non-virtual">prism::containers::BidirectionalIterator&lt; T &gt;</derivedcompoundref>
    <includes refid="_iterator_8h" local="no">Iterator.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classprism_1_1containers_1_1_forward_iterator_1a1543170bc355e16a500f376e748f3031" prot="public" static="no">
        <type>T</type>
        <definition>typedef T prism::containers::ForwardIterator&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="45" column="1" bodyfile="inc/containers/Iterator.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classprism_1_1containers_1_1_forward_iterator_1a79680986bd39e3c2f0ab1e008b1150e5" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>typedef std::ptrdiff_t prism::containers::ForwardIterator&lt; T &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="46" column="1" bodyfile="inc/containers/Iterator.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classprism_1_1containers_1_1_forward_iterator_1aaa8389de2916ab8609f1c92e789d0b92" prot="public" static="no">
        <type><ref refid="structprism_1_1containers_1_1forward__iterator__tag" kindref="compound">forward_iterator_tag</ref></type>
        <definition>typedef forward_iterator_tag prism::containers::ForwardIterator&lt; T &gt;::iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="47" column="1" bodyfile="inc/containers/Iterator.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classprism_1_1containers_1_1_forward_iterator_1a4e3141e23f97c87d787c42e5e25cfdf8" prot="public" static="no">
        <type>T &amp;</type>
        <definition>typedef T&amp; prism::containers::ForwardIterator&lt; T &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="48" column="1" bodyfile="inc/containers/Iterator.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classprism_1_1containers_1_1_forward_iterator_1ad4bc81f412acc7a2d12e592078ed51aa" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* prism::containers::ForwardIterator&lt; T &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="49" column="1" bodyfile="inc/containers/Iterator.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classprism_1_1containers_1_1_forward_iterator_1afae3bf32acc98ab535b9bdb8156ba58f" prot="public" static="no" mutable="no">
        <type>T *</type>
        <definition>T* prism::containers::ForwardIterator&lt; T &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="51" column="1" bodyfile="inc/containers/Iterator.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classprism_1_1containers_1_1_forward_iterator_1a7852817d50449b2ab5fc73f071c10c8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>prism::containers::ForwardIterator&lt; T &gt;::ForwardIterator</definition>
        <argsstring>()</argsstring>
        <name>ForwardIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="52" column="1" bodyfile="inc/containers/Iterator.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_forward_iterator_1a469936218cb7f00b04d13340afeff943" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>prism::containers::ForwardIterator&lt; T &gt;::ForwardIterator</definition>
        <argsstring>(T *p)</argsstring>
        <name>ForwardIterator</name>
        <param>
          <type>T *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="53" column="1" bodyfile="inc/containers/Iterator.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_forward_iterator_1a6b7c7a4d1ff9c119826689fd75f8037e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>prism::containers::ForwardIterator&lt; T &gt;::ForwardIterator</definition>
        <argsstring>(const ForwardIterator&lt; T &gt; &amp;copy)</argsstring>
        <name>ForwardIterator</name>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref>&lt; T &gt; &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="54" column="1" bodyfile="inc/containers/Iterator.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_forward_iterator_1afb9d08367d5a03fcaca4524f799b702c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual prism::containers::ForwardIterator&lt; T &gt;::~ForwardIterator</definition>
        <argsstring>()</argsstring>
        <name>~ForwardIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="55" column="1" bodyfile="inc/containers/Iterator.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_forward_iterator_1a4bb697c101c3430ab83380e93984c834" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classprism_1_1containers_1_1_forward_iterator_1a4e3141e23f97c87d787c42e5e25cfdf8" kindref="member">reference</ref></type>
        <definition>virtual reference prism::containers::ForwardIterator&lt; T &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="56" column="1" bodyfile="inc/containers/Iterator.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_forward_iterator_1a6de6139a20b187db48db7eda3e137d22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classprism_1_1containers_1_1_forward_iterator_1ad4bc81f412acc7a2d12e592078ed51aa" kindref="member">pointer</ref></type>
        <definition>virtual pointer prism::containers::ForwardIterator&lt; T &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="57" column="1" bodyfile="inc/containers/Iterator.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_forward_iterator_1a650b575bab2dd1f9b20e2a0feb3b8b52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
        <definition>virtual ForwardIterator&amp; prism::containers::ForwardIterator&lt; T &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="58" column="1" bodyfile="inc/containers/Iterator.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_forward_iterator_1a52c1a971cf72b2a085defacd771e6c6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref></type>
        <definition>virtual ForwardIterator prism::containers::ForwardIterator&lt; T &gt;::operator++</definition>
        <argsstring>(int junk)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
          <declname>junk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="59" column="1" bodyfile="inc/containers/Iterator.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_forward_iterator_1a21a1aaeb388a2d31a750629c3dec4f5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
        <definition>virtual ForwardIterator&amp; prism::containers::ForwardIterator&lt; T &gt;::operator=</definition>
        <argsstring>(ForwardIterator rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="60" column="1" bodyfile="inc/containers/Iterator.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_forward_iterator_1a4f58dc3e4905d6ac25b5c4c02ab1477e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool prism::containers::ForwardIterator&lt; T &gt;::operator!=</definition>
        <argsstring>(const ForwardIterator rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="61" column="1" bodyfile="inc/containers/Iterator.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_forward_iterator_1a6b9425598a719eb264beffe220acbfc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool prism::containers::ForwardIterator&lt; T &gt;::operator==</definition>
        <argsstring>(const ForwardIterator rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="62" column="1" bodyfile="inc/containers/Iterator.h" bodystart="62" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classprism_1_1containers_1_1_forward_iterator_1aaad8cb3873bc75101e6aec86fda597b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classprism_1_1containers_1_1_forward_iterator_1a79680986bd39e3c2f0ab1e008b1150e5" kindref="member">difference_type</ref></type>
        <definition>difference_type operator-</definition>
        <argsstring>(const ForwardIterator &amp;lhs, const ForwardIterator &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="65" column="1" bodyfile="inc/containers/Iterator.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1containers_1_1_forward_iterator_1a6b30659c53f42b141d66d983aa919acd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const bool</type>
        <definition>const bool operator&lt;</definition>
        <argsstring>(const ForwardIterator &amp;lhs, const ForwardIterator &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="66" column="1" bodyfile="inc/containers/Iterator.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1containers_1_1_forward_iterator_1a99354852714dd199e60ce045023c2573" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const bool</type>
        <definition>const bool operator&gt;</definition>
        <argsstring>(const ForwardIterator &amp;lhs, const ForwardIterator &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="67" column="1" bodyfile="inc/containers/Iterator.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1containers_1_1_forward_iterator_1a0587c766ccabd72167e87461c8637cc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const bool</type>
        <definition>const bool operator&lt;=</definition>
        <argsstring>(const ForwardIterator &amp;lhs, const ForwardIterator &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="68" column="1" bodyfile="inc/containers/Iterator.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1containers_1_1_forward_iterator_1ab9192c8005124b4eee6a698a74d71e01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend const bool</type>
        <definition>const bool operator&gt;=</definition>
        <argsstring>(const ForwardIterator &amp;lhs, const ForwardIterator &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1containers_1_1_forward_iterator" kindref="compound">ForwardIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Iterator.h" line="69" column="1" bodyfile="inc/containers/Iterator.h" bodystart="69" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="50">
        <label>prism::containers::RandomAccessIterator&lt; T &gt;</label>
        <link refid="classprism_1_1containers_1_1_random_access_iterator"/>
        <childnode refid="49" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>prism::containers::ForwardIterator&lt; T &gt;</label>
        <link refid="classprism_1_1containers_1_1_forward_iterator"/>
      </node>
      <node id="49">
        <label>prism::containers::BidirectionalIterator&lt; T &gt;</label>
        <link refid="classprism_1_1containers_1_1_bidirectional_iterator"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="inc/containers/Iterator.h" line="43" column="1" bodyfile="inc/containers/Iterator.h" bodystart="43" bodyend="70"/>
    <listofallmembers>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a79680986bd39e3c2f0ab1e008b1150e5" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>difference_type</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a7852817d50449b2ab5fc73f071c10c8d" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>ForwardIterator</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a469936218cb7f00b04d13340afeff943" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>ForwardIterator</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a6b7c7a4d1ff9c119826689fd75f8037e" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>ForwardIterator</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1aaa8389de2916ab8609f1c92e789d0b92" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>iterator_category</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a4f58dc3e4905d6ac25b5c4c02ab1477e" prot="public" virt="virtual"><scope>prism::containers::ForwardIterator</scope><name>operator!=</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a4bb697c101c3430ab83380e93984c834" prot="public" virt="virtual"><scope>prism::containers::ForwardIterator</scope><name>operator*</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a650b575bab2dd1f9b20e2a0feb3b8b52" prot="public" virt="virtual"><scope>prism::containers::ForwardIterator</scope><name>operator++</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a52c1a971cf72b2a085defacd771e6c6e" prot="public" virt="virtual"><scope>prism::containers::ForwardIterator</scope><name>operator++</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1aaad8cb3873bc75101e6aec86fda597b0" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>operator-</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a6de6139a20b187db48db7eda3e137d22" prot="public" virt="virtual"><scope>prism::containers::ForwardIterator</scope><name>operator-&gt;</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a6b30659c53f42b141d66d983aa919acd" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>operator&lt;</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a0587c766ccabd72167e87461c8637cc1" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>operator&lt;=</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a21a1aaeb388a2d31a750629c3dec4f5c" prot="public" virt="virtual"><scope>prism::containers::ForwardIterator</scope><name>operator=</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a6b9425598a719eb264beffe220acbfc8" prot="public" virt="virtual"><scope>prism::containers::ForwardIterator</scope><name>operator==</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a99354852714dd199e60ce045023c2573" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>operator&gt;</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1ab9192c8005124b4eee6a698a74d71e01" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>operator&gt;=</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1afae3bf32acc98ab535b9bdb8156ba58f" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>p</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1ad4bc81f412acc7a2d12e592078ed51aa" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>pointer</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a4e3141e23f97c87d787c42e5e25cfdf8" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>reference</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1a1543170bc355e16a500f376e748f3031" prot="public" virt="non-virtual"><scope>prism::containers::ForwardIterator</scope><name>value_type</name></member>
      <member refid="classprism_1_1containers_1_1_forward_iterator_1afb9d08367d5a03fcaca4524f799b702c" prot="public" virt="virtual"><scope>prism::containers::ForwardIterator</scope><name>~ForwardIterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
