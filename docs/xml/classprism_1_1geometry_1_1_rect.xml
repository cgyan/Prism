<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classprism_1_1geometry_1_1_rect" kind="class" language="C++" prot="public">
    <compoundname>prism::geometry::Rect</compoundname>
    <includes refid="_rect_8h" local="no">Rect.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classprism_1_1geometry_1_1_rect_1ac6fd52a2bde2125a0bcdc0da323605fa" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int prism::geometry::Rect::x1</definition>
        <argsstring></argsstring>
        <name>x1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="22" column="1" bodyfile="inc/geometry/Rect.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classprism_1_1geometry_1_1_rect_1ae2df9e34375d8be41c4343e7244d162f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int prism::geometry::Rect::y1</definition>
        <argsstring></argsstring>
        <name>y1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="23" column="1" bodyfile="inc/geometry/Rect.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classprism_1_1geometry_1_1_rect_1a4a65a9f65dc8e8f952bc5be55954853e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int prism::geometry::Rect::x2</definition>
        <argsstring></argsstring>
        <name>x2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="24" column="1" bodyfile="inc/geometry/Rect.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classprism_1_1geometry_1_1_rect_1a307891c2f4e38e0f9fcf0b928949a7b4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int prism::geometry::Rect::y2</definition>
        <argsstring></argsstring>
        <name>y2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="25" column="1" bodyfile="inc/geometry/Rect.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1af5f00aa1b738402869b2e5a50680dbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::geometry::Rect::Rect</definition>
        <argsstring>()</argsstring>
        <name>Rect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a rectangle with x=y=width=height=0. <emphasis><ref refid="classprism_1_1geometry_1_1_rect_1a96fbe8d518599871cf914b2cdc2d84bc" kindref="member">isEmpty()</ref></emphasis> and <emphasis><ref refid="classprism_1_1geometry_1_1_rect_1a87f8a960d0e47a12d39f3631b8448bb7" kindref="member">isNull()</ref></emphasis> will return true in this state whilst <emphasis><ref refid="classprism_1_1geometry_1_1_rect_1a448754593112b31dea56afd404007dea" kindref="member">isValid()</ref></emphasis> will return false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="28" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a4aa4330e221ec6d07932ecd08f56406a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::geometry::Rect::Rect</definition>
        <argsstring>(const int x, const int y, const int width, const int height)</argsstring>
        <name>Rect</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a rectangle positioning the top left corner at (x,y) and having <emphasis>width</emphasis> and <emphasis>height</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="29" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a5b15bd9dbd9e4ab7ef96e3df75e93f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::geometry::Rect::Rect</definition>
        <argsstring>(const Point &amp;topLeft, const Point &amp;bottomRight)</argsstring>
        <name>Rect</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>topLeft</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>bottomRight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a rectangle positioning its top left corner at <emphasis>topLeft</emphasis> and its bottom right corner positioned at <emphasis>bottomRight</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="30" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a9cbd754e99927217fd508b3365fe7498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::geometry::Rect::Rect</definition>
        <argsstring>(const Point &amp;topLeft, const Size &amp;size)</argsstring>
        <name>Rect</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>topLeft</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_size" kindref="compound">Size</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a rectangle positioning its top left corner at <emphasis>topLeft</emphasis> and its width and height set to <emphasis>size</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="31" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1aaf42c3ce8864789cc9bf28ac49e7242c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::geometry::Rect::Rect</definition>
        <argsstring>(const Rect &amp;copy)</argsstring>
        <name>Rect</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor makes a copy of <emphasis>copy</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="32" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a454fcbd614d4aab447d91e84d023a394" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>prism::geometry::Rect::~Rect</definition>
        <argsstring>()</argsstring>
        <name>~Rect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="33" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a1083c95584849792cba377c873e64b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::adjust</definition>
        <argsstring>(const int dx1, const int dy1, const int dx2, const int dy2)</argsstring>
        <name>adjust</name>
        <param>
          <type>const int</type>
          <declname>dx1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dy1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dx2</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dy2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds dx1, dy1, dx2 and dy2 to the existing coordinates of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="35" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ac79b187d7ae4b8530755b62902f1a9e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect prism::geometry::Rect::adjusted</definition>
        <argsstring>(const int dx1, const int dy1, const int dx2, const int dy2) const </argsstring>
        <name>adjusted</name>
        <param>
          <type>const int</type>
          <declname>dx1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dy1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dx2</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dy2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of this rectangle which has added dx1, dy1, dx2 and dy2 to the existing coordinates of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="36" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1aadf2911d76976a6f773acc9a0c6f6b82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int prism::geometry::Rect::bottom</definition>
        <argsstring>() const </argsstring>
        <name>bottom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the y-coordinate of the rectangle&apos;s bottom edge. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="37" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a0dfdb07cd5b41a228f9a0857d89d3053" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref></type>
        <definition>Point prism::geometry::Rect::bottomLeft</definition>
        <argsstring>() const </argsstring>
        <name>bottomLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the coordinate of the bottom left of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="38" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a16a9088be2bfd87437286a23aed2094c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref></type>
        <definition>Point prism::geometry::Rect::bottomRight</definition>
        <argsstring>() const </argsstring>
        <name>bottomRight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the coordinate of the bottom right of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="39" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a54b2322f49843c991054006fabe2f693" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref></type>
        <definition>Point prism::geometry::Rect::centre</definition>
        <argsstring>() const </argsstring>
        <name>centre</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the coordinate of the centre point of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="40" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a914016ca0b12a9aa21e77527746454cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool prism::geometry::Rect::contains</definition>
        <argsstring>(const Point &amp;point) const </argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if <emphasis>point</emphasis> is within or on the rectangle&apos;s boundary, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="41" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="118" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a06118ba60a892201ab16fbfefefb60ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool prism::geometry::Rect::contains</definition>
        <argsstring>(const int x, const int y) const </argsstring>
        <name>contains</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if (x,y) is within or on the rectangle&apos;s boundary, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="42" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a1fce0ff592c8bc5c0f9e69eeb0278f2b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool prism::geometry::Rect::contains</definition>
        <argsstring>(const Rect &amp;rect) const </argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if <emphasis>rect</emphasis> is contained within or on the rectangle&apos;s boundary, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="43" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="138" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a4c039f77c79ddf46ee0e1141368cd835" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::getCoordinates</definition>
        <argsstring>(int *x1, int *y1, int *x2, int *y2) const </argsstring>
        <name>getCoordinates</name>
        <param>
          <type>int *</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the coordinates of the rectangle and assigns them to (x1,y1)(x2,y2). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="44" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="150" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a85e1ea516a78da51ba82ce845c2c45bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::getRect</definition>
        <argsstring>(int *x, int *y, int *width, int *height) const </argsstring>
        <name>getRect</name>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts the top left corner coordinates and width and height of this rectangle and assigns them to (x,y) and <emphasis>width</emphasis> and <emphasis>height</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="45" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="161" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1afe44f3f138f24808dba2bd807dbbe832" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int prism::geometry::Rect::height</definition>
        <argsstring>() const </argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the height of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="46" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ad5637ecd9044e1aba9a2b20edfe64b0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect prism::geometry::Rect::intersected</definition>
        <argsstring>(const Rect &amp;rect) const </argsstring>
        <name>intersected</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a rectangle that represents the overlapping portion of this rectangle and <emphasis>rect</emphasis>. If the two rectangles are not intersected then this rectangle is returned instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="47" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="180" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a9ed407bdc1433493f8353e4e99a4802d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool prism::geometry::Rect::intersects</definition>
        <argsstring>(const Rect &amp;rect) const </argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if <emphasis>rect</emphasis> intersects this rectangle, false otherwise. Note that a rectangle must intersect by at least 1 pixel in order for it to be considered intersecting. Edges that sit on top of each are not considered to be intersecting. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="48" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="207" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a96fbe8d518599871cf914b2cdc2d84bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool prism::geometry::Rect::isEmpty</definition>
        <argsstring>() const </argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An empty rectangle is one where its width or height (or both) are zero or less. Returns true if it is an empy rectangle, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="49" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a87f8a960d0e47a12d39f3631b8448bb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool prism::geometry::Rect::isNull</definition>
        <argsstring>() const </argsstring>
        <name>isNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A null rectangle is one where the width and height are both equal to zero. Returns true if it is a null rectangle, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="50" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a448754593112b31dea56afd404007dea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool prism::geometry::Rect::isValid</definition>
        <argsstring>() const </argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A valid rectangle is one where its width and height are at least 1 or greater. Returns true if this is a valid rectangle, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="51" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ae423bd72347e4d5363ee2679a7e28a5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int prism::geometry::Rect::left</definition>
        <argsstring>() const </argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the x-coordinate of the rectangle&apos;s left edge. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="52" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a26169eca1c3bd117aee5529ecabdeab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveBottom</definition>
        <argsstring>(const int y)</argsstring>
        <name>moveBottom</name>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the rectangle downwards so that its bottom edge is positioned at <emphasis>y</emphasis>. This does not affect the width and height. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="53" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="250" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a6c93e7aa0cf76e483dd9844ea0c0ae92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveBottomLeft</definition>
        <argsstring>(const Point &amp;position)</argsstring>
        <name>moveBottomLeft</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="54" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a7f1e4141d8879ce54fc45e6005146a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveBottomRight</definition>
        <argsstring>(const Point &amp;position)</argsstring>
        <name>moveBottomRight</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="55" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1af5a0e47f3771365467b596d069b1137f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveCentre</definition>
        <argsstring>(const int x, const int y)</argsstring>
        <name>moveCentre</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the rectangle placing its centre at (x,y). This does not affect the width and height. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="56" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ad26400adfe91b53bc35eb808555e17d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveCentre</definition>
        <argsstring>(const Point &amp;position)</argsstring>
        <name>moveCentre</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the rectangle placing its centre point at <emphasis>position</emphasis>. This does not affect the width and height. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="57" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="284" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a69e1fde9419a8aa4924cf301eca10a2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveLeft</definition>
        <argsstring>(const int x)</argsstring>
        <name>moveLeft</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the rectangle to the left so that its left edge is positioned at <emphasis>x</emphasis>. This does not affect the width and height. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="58" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="298" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ac19e6cdd500aa51993012cd0b49e8754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveRight</definition>
        <argsstring>(const int x)</argsstring>
        <name>moveRight</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the rectangle to the right so that its right edge is positioned at <emphasis>x</emphasis>. This does not affect the width and height. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="59" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="308" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a8b9e6ed6ee5275599efa469c827c0fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveTo</definition>
        <argsstring>(const int x, const int y)</argsstring>
        <name>moveTo</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the rectangle so that its top left corner will be located at (x,y). The width and height will still be the same as before the rectangle was moved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="60" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="318" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a9feb882f94b8e0610a393fcf255374b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveTo</definition>
        <argsstring>(const Point &amp;position)</argsstring>
        <name>moveTo</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the rectangle so that its top left corner will be located at <emphasis>position</emphasis>. The width and height will still be the same as before the rectangle was moved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="61" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="326" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1aa19b2e99776eac3a751e678672124d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveTop</definition>
        <argsstring>(const int y)</argsstring>
        <name>moveTop</name>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the rectangle upwards so that its top edge is positioned at <emphasis>y</emphasis>. This does not affect the width and height. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="62" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="340" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a611fc63e8429a6eeb4677ee58e157972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveTopLeft</definition>
        <argsstring>(const Point &amp;position)</argsstring>
        <name>moveTopLeft</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the rectangle so that its top left corner is positioned at <emphasis>position</emphasis>. This does not affect the width and height. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="63" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a75ef65067f2f99ea0d91074cda481e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::moveTopRight</definition>
        <argsstring>(const Point &amp;position)</argsstring>
        <name>moveTopRight</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the rectangle so that its top right corner is positioned at <emphasis>position</emphasis>. This does not affect the width and height. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="64" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="359" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ab3e98aad0d5e86a221bf7582de29492a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect prism::geometry::Rect::normalised</definition>
        <argsstring>() const </argsstring>
        <name>normalised</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If a rectangle has a negative width or height it can normalised by swapping the left and right edges around and/or the top and bottom edges around as necessary. Returns a new normalised rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="65" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="369" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a01f98f870b9dc5eff36c5c2e0ba477b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int prism::geometry::Rect::right</definition>
        <argsstring>() const </argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the x-coordinate of the rectangle&apos;s right edge. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="66" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="389" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1aa488d5deee04a94e9a3e2c4fa3ecda8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setBottom</definition>
        <argsstring>(const int y)</argsstring>
        <name>setBottom</name>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the bottom edge of the rectangle to <emphasis>y</emphasis> which will potentially affect the overall height but will not effect the top edge in any way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="67" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="397" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1aa35fb4766ed7e61c8a44ecacb60321ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setBottomLeft</definition>
        <argsstring>(const Point &amp;position)</argsstring>
        <name>setBottomLeft</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the bottom left corner of the rectangle to <emphasis>bottomLeft</emphasis>. It may change the width and height of the rectangle but the top right corner will not move. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="68" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="406" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a07edad0ec9c4fac6fe6e9e5fd2f80b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setBottomRight</definition>
        <argsstring>(const Point &amp;position)</argsstring>
        <name>setBottomRight</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the bottom right corner of the rectangle to <emphasis>bottomRight</emphasis>. It may change the width and height of the rectangle but the top left corner will not move. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="69" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="416" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a8525f68d4771bf68be7f105d36fdbac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setCoordinates</definition>
        <argsstring>(const int x1, const int y1, const int x2, const int y2)</argsstring>
        <name>setCoordinates</name>
        <param>
          <type>const int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the coordinates of this rectangle&apos;s top left corner to (x1,y1) and the bottom right corner to (x2,y2). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="70" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="425" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a18b0fde32981043ec08f863589e0f8d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setHeight</definition>
        <argsstring>(const int height)</argsstring>
        <name>setHeight</name>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the height of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="71" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="435" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ac97b8d2c15064a26b6f26833e7001fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setLeft</definition>
        <argsstring>(const int x)</argsstring>
        <name>setLeft</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the left side of the rectangle to <emphasis>x</emphasis> which will potentially alter the width of the rectangle but will not affect the right edge in any way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="72" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="443" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a8ae3b5005957a66f52cc3a2809572c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setRect</definition>
        <argsstring>(const int x, const int y, const int width, const int height)</argsstring>
        <name>setRect</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="73" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="450" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1af077efaa0e61445eca6a832dd54daacc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setRight</definition>
        <argsstring>(const int x)</argsstring>
        <name>setRight</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the right side of the rectangle to <emphasis>x</emphasis> which will potentially alter the width of the rectangle but will not affect the left edge in any way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="74" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="461" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a21d8240b960c0940dc9bed90466b8bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setSize</definition>
        <argsstring>(const Size &amp;size)</argsstring>
        <name>setSize</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_size" kindref="compound">Size</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the rectangle&apos;s size to <emphasis>size</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="75" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="468" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a126bf4bdf0581056cc5152c1ad394019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setTop</definition>
        <argsstring>(const int y)</argsstring>
        <name>setTop</name>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the top edge of the rectangle to <emphasis>y</emphasis> which will potentially affect the height of the rectangle but will not affect the bottom edge in any way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="76" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="477" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a5667e4527098948cb8bc597f43a46b59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setTopLeft</definition>
        <argsstring>(const Point &amp;position)</argsstring>
        <name>setTopLeft</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the top left corner of the rectangle to <emphasis>topLeft</emphasis>. It may change the width and height of the rectangle but the bottom right corner will not move. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="77" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="486" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ab9a9908492adcd4fc489ba3c28dfc4ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setTopRight</definition>
        <argsstring>(const Point &amp;position)</argsstring>
        <name>setTopRight</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the top right corner of the rectangle to <emphasis>topRight</emphasis>. It may change the width and height of the rectangle but the bottom left corner will not move. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="78" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="496" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a42106f226ff5487937030da6781dcd4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setX</definition>
        <argsstring>(const int x)</argsstring>
        <name>setX</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the x-coordinate of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="79" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="504" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a22ed3d78f25ddef614872e5f39ee102d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setY</definition>
        <argsstring>(const int y)</argsstring>
        <name>setY</name>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the y-coordinate of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="80" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="511" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a2b418c3a8bfa81d1dfcdff62f532f7f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::setWidth</definition>
        <argsstring>(const int width)</argsstring>
        <name>setWidth</name>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the width of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="81" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="518" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a5f848db57909f09943fc21fd45a41da2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_size" kindref="compound">Size</ref></type>
        <definition>Size prism::geometry::Rect::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classprism_1_1geometry_1_1_size" kindref="compound">Size</ref> object representing the size of this rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="82" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="525" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ae05c3819e7cbbe4e3438ed477b927251" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int prism::geometry::Rect::top</definition>
        <argsstring>() const </argsstring>
        <name>top</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the y-coordinate of the rectangle&apos;s top edge. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="83" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="532" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ae1286050e3e1d841e065170e6fa213d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref></type>
        <definition>Point prism::geometry::Rect::topLeft</definition>
        <argsstring>() const </argsstring>
        <name>topLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the top left coordinate of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="84" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="539" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a7220a37ad32137c12b1f1e29343f60bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref></type>
        <definition>Point prism::geometry::Rect::topRight</definition>
        <argsstring>() const </argsstring>
        <name>topRight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the coordinate of the top right of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="85" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="546" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a204cfa6f9844054c19845cd6fb70148c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::translate</definition>
        <argsstring>(const int dx, const int dy)</argsstring>
        <name>translate</name>
        <param>
          <type>const int</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Translates the rectangle relative to its current position by the amount of <emphasis>dx</emphasis> on the x-axis and by the amount of <emphasis>dy</emphasis> on the y-axis. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="86" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="555" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a9cc62fffe094f07d175e97cd392dd69b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::geometry::Rect::translate</definition>
        <argsstring>(const Point &amp;offset)</argsstring>
        <name>translate</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Translates the rectangle relative to its current position by the amount of <emphasis>offset</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="87" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="566" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a6705b147640d1170b3b8bd95b8291b86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect prism::geometry::Rect::translated</definition>
        <argsstring>(const int dx, const int dy) const </argsstring>
        <name>translated</name>
        <param>
          <type>const int</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of this rectangle that has been translated relative to its current position by the amount of <emphasis>dx</emphasis> on the x-axis and by the amount of dy on the y-axis. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="88" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="578" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a6caba9800b45624e4e365e90ee3e1c76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect prism::geometry::Rect::translated</definition>
        <argsstring>(const Point &amp;offset) const </argsstring>
        <name>translated</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of this rectangle that has been translated relative to its current position by the amount of <emphasis>offset</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="89" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="589" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ac8f4756c021ee21a653433b91d9ec959" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect prism::geometry::Rect::transposed</definition>
        <argsstring>() const </argsstring>
        <name>transposed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a new rectangle with the same top left corner but with the width and height swapped around. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="90" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="600" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1abf31fd9bcc26fa264dc91db7ec3f87bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect prism::geometry::Rect::united</definition>
        <argsstring>(const Rect &amp;rect) const </argsstring>
        <name>united</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a new bounding rectangle that contains both this rectangle and <emphasis>rect</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="91" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="607" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1afe228be73477fba4bb5865c23d2761f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int prism::geometry::Rect::width</definition>
        <argsstring>() const </argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the width of the rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="92" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="627" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1a7ecf0e30c1485b8b6ed1c83625e0ce4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int prism::geometry::Rect::x</definition>
        <argsstring>() const </argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the x-coordinate of the rectangle&apos;s left edge. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="93" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="635" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1aae87aa965538d7d9ba24050d111fbd0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int prism::geometry::Rect::y</definition>
        <argsstring>() const </argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the y-coordinate of the rectangle&apos;s top edge. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="94" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="642" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1geometry_1_1_rect_1ab5ff8b854d944cf0dcaa7fed8321246e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
        <definition>Rect &amp; prism::geometry::Rect::operator=</definition>
        <argsstring>(const Rect &amp;rect)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="96" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="649" bodyend="656"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_rect_1ab32eafa53d6e2fedc5c4f4beeb10d12a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend const bool</type>
        <definition>const bool operator==</definition>
        <argsstring>(const Rect &amp;r1, const Rect &amp;r2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>===================================================================== <heading level="1">Related non-members </heading>
</para><para>Returns true if the rectangles <emphasis>r1</emphasis> and <emphasis>r2</emphasis> are equal, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="99" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="666" bodyend="668"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_rect_1a649643043218228aae2b7d95e1a95dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend const bool</type>
        <definition>const bool operator!=</definition>
        <argsstring>(const Rect &amp;r1, const Rect &amp;r2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the rectangles <emphasis>r1</emphasis> and <emphasis>r2</emphasis> are not equal, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="100" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="673" bodyend="675"/>
      </memberdef>
      <memberdef kind="friend" id="classprism_1_1geometry_1_1_rect_1a729ddc4e5633a601a2813d124209056f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Rect &amp;rect)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows an instance of <ref refid="classprism_1_1geometry_1_1_rect" kindref="compound">Rect</ref> to be written to the ostream and returns a reference to the ostream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry/Rect.h" line="101" column="1" bodyfile="src/geometry/Rect.cpp" bodystart="680" bodyend="685"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="inc/geometry/Rect.h" line="20" column="1" bodyfile="inc/geometry/Rect.h" bodystart="20" bodyend="102"/>
    <listofallmembers>
      <member refid="classprism_1_1geometry_1_1_rect_1a1083c95584849792cba377c873e64b4e" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>adjust</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ac79b187d7ae4b8530755b62902f1a9e3" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>adjusted</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1aadf2911d76976a6f773acc9a0c6f6b82" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>bottom</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a0dfdb07cd5b41a228f9a0857d89d3053" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>bottomLeft</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a16a9088be2bfd87437286a23aed2094c" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>bottomRight</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a54b2322f49843c991054006fabe2f693" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>centre</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a914016ca0b12a9aa21e77527746454cc" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>contains</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a06118ba60a892201ab16fbfefefb60ee" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>contains</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a1fce0ff592c8bc5c0f9e69eeb0278f2b" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>contains</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a4c039f77c79ddf46ee0e1141368cd835" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>getCoordinates</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a85e1ea516a78da51ba82ce845c2c45bd" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>getRect</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1afe44f3f138f24808dba2bd807dbbe832" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>height</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ad5637ecd9044e1aba9a2b20edfe64b0c" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>intersected</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a9ed407bdc1433493f8353e4e99a4802d" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>intersects</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a96fbe8d518599871cf914b2cdc2d84bc" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>isEmpty</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a87f8a960d0e47a12d39f3631b8448bb7" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>isNull</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a448754593112b31dea56afd404007dea" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>isValid</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ae423bd72347e4d5363ee2679a7e28a5c" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>left</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a26169eca1c3bd117aee5529ecabdeab3" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveBottom</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a6c93e7aa0cf76e483dd9844ea0c0ae92" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveBottomLeft</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a7f1e4141d8879ce54fc45e6005146a97" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveBottomRight</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1af5a0e47f3771365467b596d069b1137f" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveCentre</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ad26400adfe91b53bc35eb808555e17d2" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveCentre</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a69e1fde9419a8aa4924cf301eca10a2a" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveLeft</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ac19e6cdd500aa51993012cd0b49e8754" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveRight</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a8b9e6ed6ee5275599efa469c827c0fbc" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveTo</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a9feb882f94b8e0610a393fcf255374b3" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveTo</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1aa19b2e99776eac3a751e678672124d19" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveTop</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a611fc63e8429a6eeb4677ee58e157972" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveTopLeft</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a75ef65067f2f99ea0d91074cda481e16" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>moveTopRight</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ab3e98aad0d5e86a221bf7582de29492a" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>normalised</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a649643043218228aae2b7d95e1a95dba" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>operator!=</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a729ddc4e5633a601a2813d124209056f" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>operator&lt;&lt;</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ab5ff8b854d944cf0dcaa7fed8321246e" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>operator=</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ab32eafa53d6e2fedc5c4f4beeb10d12a" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>operator==</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1af5f00aa1b738402869b2e5a50680dbf0" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>Rect</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a4aa4330e221ec6d07932ecd08f56406a" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>Rect</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a5b15bd9dbd9e4ab7ef96e3df75e93f98" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>Rect</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a9cbd754e99927217fd508b3365fe7498" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>Rect</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1aaf42c3ce8864789cc9bf28ac49e7242c" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>Rect</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a01f98f870b9dc5eff36c5c2e0ba477b4" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>right</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1aa488d5deee04a94e9a3e2c4fa3ecda8b" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setBottom</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1aa35fb4766ed7e61c8a44ecacb60321ee" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setBottomLeft</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a07edad0ec9c4fac6fe6e9e5fd2f80b6c" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setBottomRight</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a8525f68d4771bf68be7f105d36fdbac7" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setCoordinates</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a18b0fde32981043ec08f863589e0f8d8" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setHeight</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ac97b8d2c15064a26b6f26833e7001fbe" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setLeft</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a8ae3b5005957a66f52cc3a2809572c62" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setRect</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1af077efaa0e61445eca6a832dd54daacc" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setRight</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a21d8240b960c0940dc9bed90466b8bdc" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setSize</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a126bf4bdf0581056cc5152c1ad394019" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setTop</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a5667e4527098948cb8bc597f43a46b59" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setTopLeft</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ab9a9908492adcd4fc489ba3c28dfc4ae" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setTopRight</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a2b418c3a8bfa81d1dfcdff62f532f7f5" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setWidth</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a42106f226ff5487937030da6781dcd4c" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setX</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a22ed3d78f25ddef614872e5f39ee102d" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>setY</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a5f848db57909f09943fc21fd45a41da2" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>size</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ae05c3819e7cbbe4e3438ed477b927251" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>top</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ae1286050e3e1d841e065170e6fa213d2" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>topLeft</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a7220a37ad32137c12b1f1e29343f60bd" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>topRight</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a204cfa6f9844054c19845cd6fb70148c" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>translate</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a9cc62fffe094f07d175e97cd392dd69b" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>translate</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a6705b147640d1170b3b8bd95b8291b86" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>translated</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a6caba9800b45624e4e365e90ee3e1c76" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>translated</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ac8f4756c021ee21a653433b91d9ec959" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>transposed</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1abf31fd9bcc26fa264dc91db7ec3f87bf" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>united</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1afe228be73477fba4bb5865c23d2761f2" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>width</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a7ecf0e30c1485b8b6ed1c83625e0ce4c" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>x</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ac6fd52a2bde2125a0bcdc0da323605fa" prot="private" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>x1</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a4a65a9f65dc8e8f952bc5be55954853e" prot="private" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>x2</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1aae87aa965538d7d9ba24050d111fbd0f" prot="public" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>y</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1ae2df9e34375d8be41c4343e7244d162f" prot="private" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>y1</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a307891c2f4e38e0f9fcf0b928949a7b4" prot="private" virt="non-virtual"><scope>prism::geometry::Rect</scope><name>y2</name></member>
      <member refid="classprism_1_1geometry_1_1_rect_1a454fcbd614d4aab447d91e84d023a394" prot="public" virt="virtual"><scope>prism::geometry::Rect</scope><name>~Rect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
