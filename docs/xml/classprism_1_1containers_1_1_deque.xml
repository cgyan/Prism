<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classprism_1_1containers_1_1_deque" kind="class" language="C++" prot="public">
    <compoundname>prism::containers::Deque</compoundname>
    <includes refid="_deque_8h" local="no">Deque.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classprism_1_1containers_1_1_deque_1a684be9c82e48df43905b70432bbc1e68" prot="public" static="no">
        <type><ref refid="classprism_1_1containers_1_1_deque_iterator" kindref="compound">DequeIterator</ref>&lt; T &gt;</type>
        <definition>typedef DequeIterator&lt;T&gt; prism::containers::Deque&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="43" column="1" bodyfile="inc/containers/Deque.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classprism_1_1containers_1_1_deque_1acd441aa1f776dfe56929dfb0449ba73f" prot="public" static="no">
        <type><ref refid="classprism_1_1containers_1_1_deque_const_iterator" kindref="compound">DequeConstIterator</ref>&lt; T &gt;</type>
        <definition>typedef DequeConstIterator&lt;T&gt; prism::containers::Deque&lt; T &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="44" column="1" bodyfile="inc/containers/Deque.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classprism_1_1containers_1_1_deque_1ae2ab6bcda1c15cd1217d5eeb0b879706" prot="private" static="no" mutable="no">
        <type><ref refid="classprism_1_1containers_1_1_deque_impl" kindref="compound">DequeImpl</ref>&lt; T &gt; *</type>
        <definition>DequeImpl&lt;T&gt;* prism::containers::Deque&lt; T &gt;::impl</definition>
        <argsstring></argsstring>
        <name>impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="66" column="1" bodyfile="inc/containers/Deque.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1ad634e7301c147a716a486765452bab92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::containers::Deque&lt; T &gt;::Deque</definition>
        <argsstring>()</argsstring>
        <name>Deque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an empty deque. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="46" column="1" bodyfile="inc/containers/Deque.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1a7fd0a5840ffddf09083a61b7220cbe22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::containers::Deque&lt; T &gt;::Deque</definition>
        <argsstring>(const int size, const T &amp;value=T())</argsstring>
        <name>Deque</name>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="47" column="1" bodyfile="inc/containers/Deque.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1a976bc3256dcc9baf18343387e5f395c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>prism::containers::Deque&lt; T &gt;::~Deque</definition>
        <argsstring>()</argsstring>
        <name>~Deque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys this deque. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="48" column="1" bodyfile="inc/containers/Deque.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1a1a1074beeda9e94e760731953c4e7875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; prism::containers::Deque&lt; T &gt;::at</definition>
        <argsstring>(const int index)</argsstring>
        <name>at</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="49" column="1" bodyfile="inc/containers/Deque.h" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1a3f85e662477c829424f6f2d0a9aa7b1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; prism::containers::Deque&lt; T &gt;::at</definition>
        <argsstring>(const int index) const </argsstring>
        <name>at</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="50" column="1" bodyfile="inc/containers/Deque.h" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1ae6d9429bfd3446c021b285c34193035b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1containers_1_1_deque_1a684be9c82e48df43905b70432bbc1e68" kindref="member">iterator</ref></type>
        <definition>Deque&lt; T &gt;::iterator prism::containers::Deque&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="51" column="1" bodyfile="inc/containers/Deque.h" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1a580ce1c829d58b32dd7bbdfc1e5b1b1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1containers_1_1_deque_1a684be9c82e48df43905b70432bbc1e68" kindref="member">iterator</ref></type>
        <definition>Deque&lt; T &gt;::iterator prism::containers::Deque&lt; T &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="52" column="1" bodyfile="inc/containers/Deque.h" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1a7006170ab7ca105aeb447acf5134d92b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1containers_1_1_deque_1acd441aa1f776dfe56929dfb0449ba73f" kindref="member">const_iterator</ref></type>
        <definition>Deque&lt; T &gt;::const_iterator prism::containers::Deque&lt; T &gt;::cbegin</definition>
        <argsstring>() const </argsstring>
        <name>cbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="53" column="1" bodyfile="inc/containers/Deque.h" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1ab06aa01b7666833e0ce5f4e33d6b19e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1containers_1_1_deque_1acd441aa1f776dfe56929dfb0449ba73f" kindref="member">const_iterator</ref></type>
        <definition>Deque&lt; T &gt;::const_iterator prism::containers::Deque&lt; T &gt;::cend</definition>
        <argsstring>() const </argsstring>
        <name>cend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="54" column="1" bodyfile="inc/containers/Deque.h" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1a723c0beaf6d0128c4a78ee8789aeaee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1containers_1_1_deque_1a684be9c82e48df43905b70432bbc1e68" kindref="member">iterator</ref></type>
        <definition>Deque&lt; T &gt;::iterator prism::containers::Deque&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="55" column="1" bodyfile="inc/containers/Deque.h" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1a9c6b512184d6fa64c438739c086b2128" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1containers_1_1_deque_1a684be9c82e48df43905b70432bbc1e68" kindref="member">iterator</ref></type>
        <definition>Deque&lt; T &gt;::iterator prism::containers::Deque&lt; T &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="56" column="1" bodyfile="inc/containers/Deque.h" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1ad7e9d8778c550a93e05d6c3338e48b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classprism_1_1containers_1_1_deque_1a684be9c82e48df43905b70432bbc1e68" kindref="member">iterator</ref></type>
        <definition>Deque&lt; T &gt;::iterator prism::containers::Deque&lt; T &gt;::insert</definition>
        <argsstring>(iterator before, const int count, const T &amp;value)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classprism_1_1containers_1_1_deque_1a684be9c82e48df43905b70432bbc1e68" kindref="member">iterator</ref></type>
          <declname>before</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="57" column="1" bodyfile="inc/containers/Deque.h" bodystart="171" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1a4a2d2f35b50d44fc393f3f08ea3ff1df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int prism::containers::Deque&lt; T &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="58" column="1" bodyfile="inc/containers/Deque.h" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1ac0e7969672a2b126068bbab2ea173e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; prism::containers::Deque&lt; T &gt;::operator[]</definition>
        <argsstring>(const int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="60" column="1" bodyfile="inc/containers/Deque.h" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1ac5a07c9599f649ea42ca30807c5c6bf5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; prism::containers::Deque&lt; T &gt;::operator[]</definition>
        <argsstring>(const int i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="61" column="1" bodyfile="inc/containers/Deque.h" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classprism_1_1containers_1_1_deque_1ab42eb9448dbb07761f0467268f5aaae3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prism::containers::Deque&lt; T &gt;::debugMap</definition>
        <argsstring>() const </argsstring>
        <name>debugMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="64" column="1" bodyfile="inc/containers/Deque.h" bodystart="210" bodyend="212"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classprism_1_1containers_1_1_deque_1af53b8d555654cf715b319caeeecb1a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class _T</type>
          </param>
        </templateparamlist>
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, Deque&lt; _T &gt; &amp;deque)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classprism_1_1containers_1_1_deque" kindref="compound">Deque</ref>&lt; _T &gt; &amp;</type>
          <declname>deque</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/containers/Deque.h" line="70" column="1" bodyfile="inc/containers/Deque.h" bodystart="218" bodyend="233"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="inc/containers/Deque.h" line="41" column="1" bodyfile="inc/containers/Deque.h" bodystart="41" bodyend="71"/>
    <listofallmembers>
      <member refid="classprism_1_1containers_1_1_deque_1a1a1074beeda9e94e760731953c4e7875" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>at</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1a3f85e662477c829424f6f2d0a9aa7b1a" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>at</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1ae6d9429bfd3446c021b285c34193035b" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>begin</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1a580ce1c829d58b32dd7bbdfc1e5b1b1d" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>begin</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1a7006170ab7ca105aeb447acf5134d92b" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>cbegin</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1ab06aa01b7666833e0ce5f4e33d6b19e3" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>cend</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1acd441aa1f776dfe56929dfb0449ba73f" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>const_iterator</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1ab42eb9448dbb07761f0467268f5aaae3" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>debugMap</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1ad634e7301c147a716a486765452bab92" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>Deque</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1a7fd0a5840ffddf09083a61b7220cbe22" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>Deque</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1a723c0beaf6d0128c4a78ee8789aeaee1" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>end</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1a9c6b512184d6fa64c438739c086b2128" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>end</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1ae2ab6bcda1c15cd1217d5eeb0b879706" prot="private" virt="non-virtual"><scope>prism::containers::Deque</scope><name>impl</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1ad7e9d8778c550a93e05d6c3338e48b4b" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>insert</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1a684be9c82e48df43905b70432bbc1e68" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>iterator</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1af53b8d555654cf715b319caeeecb1a92" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>operator&lt;&lt;</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1ac0e7969672a2b126068bbab2ea173e05" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>operator[]</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1ac5a07c9599f649ea42ca30807c5c6bf5" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>operator[]</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1a4a2d2f35b50d44fc393f3f08ea3ff1df" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>size</name></member>
      <member refid="classprism_1_1containers_1_1_deque_1a976bc3256dcc9baf18343387e5f395c1" prot="public" virt="non-virtual"><scope>prism::containers::Deque</scope><name>~Deque</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
